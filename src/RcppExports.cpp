// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fastDist
arma::mat fastDist(NumericMatrix X, NumericMatrix Y, String method);
RcppExport SEXP resemble_fastDist(SEXP XSEXP, SEXP YSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP );
        Rcpp::traits::input_parameter< String >::type method(methodSEXP );
        arma::mat __result = fastDist(X, Y, method);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// fastDistV
NumericVector fastDistV(NumericMatrix X, NumericVector Y, String method);
RcppExport SEXP resemble_fastDistV(SEXP XSEXP, SEXP YSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP );
        Rcpp::traits::input_parameter< String >::type method(methodSEXP );
        NumericVector __result = fastDistV(X, Y, method);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// fastDistVV
NumericVector fastDistVV(NumericVector X, int cores);
RcppExport SEXP resemble_fastDistVV(SEXP XSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP );
        Rcpp::traits::input_parameter< int >::type cores(coresSEXP );
        NumericVector __result = fastDistVV(X, cores);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// movcorDist
NumericMatrix movcorDist(NumericMatrix X, NumericMatrix Y, int w);
RcppExport SEXP resemble_movcorDist(SEXP XSEXP, SEXP YSEXP, SEXP wSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP );
        Rcpp::traits::input_parameter< int >::type w(wSEXP );
        NumericMatrix __result = movcorDist(X, Y, w);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// which_min
NumericVector which_min(NumericMatrix X, int cores);
RcppExport SEXP resemble_which_min(SEXP XSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP );
        Rcpp::traits::input_parameter< int >::type cores(coresSEXP );
        NumericVector __result = which_min(X, cores);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// which_minV
NumericVector which_minV(NumericVector X, int cores);
RcppExport SEXP resemble_which_minV(SEXP XSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP );
        Rcpp::traits::input_parameter< int >::type cores(coresSEXP );
        NumericVector __result = which_minV(X, cores);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
